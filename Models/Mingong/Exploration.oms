import java.text.SimpleDateFormat
import java.util.Date

import Model._

//costAccessRatio,wealthSigma,accDecay,moveAversion
val exploration = ExplorationTask(
  (((costAccessRatio in Seq(1e6,1e6,1e7))
  //x(wealthSigma in (0.1 to 1.1 by 0.5))
  //x(accDecay in (1.0 to 11.0 by 5.0))
  x (moveAversion in (0.0 to 4.0 by 0.5))
  //x(migrationShare in (0.0 to 1e-4 by 5e-5))x
  x(betaDC in (0.1 to 10.1 by 0.2))
  //x (numCategories in (1 to 2 by 1))
  ) withIndex id )
  /*(LHS(
    1,
    costAccessRatio in Range(1e6,1e7),
    wealthSigma in Range(0.0,1.0),
    accDecay in Range(1.0,20.0),
    moveAversion in Range(0.0,5.0),
    //migrationShare in Range(0.0,1e-4),
    betaDC in Range(0.0,5.0)
  ) withIndex id )*/
  x (gibratRate is 1.0)
  x (incomeGrowth is 0.0)
  x (migrationShare is 0.0)
  x (accDecay is 5.0)
  x (wealthSigma is 0.3)
  x (numCategories is 1)
  x (finalTime is 20)
  x (lifeCostMode is 1)
  x (setupMode is 1)
  x (replication in UniformDistribution[Int]() take 100)
)

//val purpose = "test"
val purpose = "grid_baseline_real_grid"


val eval = exploration -< model

val indics_hook = AppendToCSVFileHook(workDirectory / "exploration" / ((new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss")).format(new Date()))+"_"+purpose+".csv") set (
  arraysOnSingleRow := true
)

//val local = LocalEnvironment(50)
val grid = EGIEnvironment("vo.complex-systems.eu",openMOLEMemory = 4000 megabytes)

//exploration -< (model on local hook indics_hook)
exploration -< (model on grid by 20 hook indics_hook)
